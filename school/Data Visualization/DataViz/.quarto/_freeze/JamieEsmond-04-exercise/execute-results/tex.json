{
  "hash": "1f766f78b0a89c650d793c58cacf0bc6",
  "result": {
    "markdown": "---\ntitle: \"Exercise 5\"\nauthor: \"Jamie Pantazi Esmond\"\ndate: \"today\"\ndate-format: \"long\"\nformat: \n  html: \n    toc: true\n    theme: custom.scss\n    fig-cap-location: \"top\"\n    tbl-cap-location: \"top\"\n    title-block-banner: true\n    title-block-banner-color: \"#744FC6\"\n    fig-align: \"center\"\n  pdf: \n    toc: true\n    mainfont: \"Cambria\"\n    fig-cap-location: \"top\"\n    code-line-numbers: true\n    fig-align: \"center\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\\newpage\n\n# Task 1: Reflection\n\nHow do these types of visualizations help or hinder our search for truth in data?\n\nWhat do you think of the Financial Times explanations of their use of absolute numbers (not per capita numbers) and log scales (not regular scales)? How have these decisions affected your perception of the pandemic? How have they affected othersâ€™ perceptions?\n\n\\newpage\n\n# Task 2: Essential pandemic construction\n\nThe New York City Department of Buildings (DOB) maintains [a list of construction sites](https://www1.nyc.gov/assets/buildings/html/essential-active-construction.html) that have been categorized as \"essential\" during the city's shelter-in-place pandemic order.\n\n## Load and clean data\n\nFirst we load and clean the data (downloaded in May 2020):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# You'll only need the tidyverse library for this exercise\nlibrary(tidyverse)\nlibrary(scales)\n\ncolors <- c(\"#7400CC\", \"#0E0ACC\", \"#CC0AA4\", \"#CCAC14\", \"#3ACC14\")\nmy_pct <- label_number(accuracy = 2, scale = 100, suffix = \"%\")\n\n# Load original data\nessential_raw <- read_csv(\"data/EssentialConstruction.csv\")\n\n# Clean the data a little\n# Some of the borough names are in ALL CAPS, so we use str_to_title() to convert\n# everything in the column to title case.\n# We also make BOROUGH and CATEGORY factors (or categorical variables)\nessential <- essential_raw %>% \n  mutate(BOROUGH = str_to_title(BOROUGH),\n         BOROUGH = factor(BOROUGH),\n         CATEGORY = factor(CATEGORY))\n```\n:::\n\n\n## Approved projects by borough\n\nRight now there's a row for each approved construction site. We need to condense that down to get counts of construction sites by different variables. We can do this by using `group_by()` and `summarize()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nessential_by_borough <- essential %>% \n  group_by(BOROUGH) %>% \n  summarize(total = n()) %>% \n  mutate(proportion = total / sum(total))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nessential_by_borough %>% \n  ggplot(aes(BOROUGH, proportion)) +\n  geom_col(fill = \"#0E0ACC\") +\n  theme_light() +  \n  theme(text = element_text(family = \"serif\"),\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        axis.ticks = element_blank(),\n        panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](JamieEsmond-04-exercise_files/figure-pdf/plot-borough-summary-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n## Approved projects by category\n\n\n::: {.cell}\n\n```{.r .cell-code}\nessential_by_category <- essential %>% \n  group_by(CATEGORY) %>% \n  summarize(total = n()) %>% \n  mutate(proportion = total / sum(total))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add a lollipop chart here\n\nessential_by_category %>% \n  ggplot(aes(CATEGORY, proportion)) +\n  geom_pointrange(aes(ymin = 0, ymax = proportion),\n                  fatten = 5, size = 1.5, color = \"#0E0ACC\") +\n  scale_x_discrete(labels = str_wrap(essential_by_category$CATEGORY, \n                                     width = 11)) +\n  labs(x = \"Category\",\n       y = \"Proportion\") +\n  theme_light() +  \n  theme(text = element_text(family = \"serif\"),\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        axis.ticks = element_blank(),\n        panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](JamieEsmond-04-exercise_files/figure-pdf/plot-category-summary-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n## Approved projects across borough and category\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a summarized dataset of projects by both borough and category\n#\n# I also won't give you the code to make the summary for the heatmap. You'll\n# need to group by two variables to make the summary. IMPORTANTLY you'll also\n# need to add another group_by() in between summarize() and mutate(), otherwise,\n# R will calculate percentages in unexpected groups. \n#\n# If you want the percentages of categories to add up to 100% in each borough,\n# you'll want to group by borough before calculating the proportion; if you want\n# the percentages of boroughs to add up to 100% in each category, you'll want to\n# group by category\n\nheat <- essential %>% \n  group_by(BOROUGH, CATEGORY) %>% \n  summarize(total = n()) %>% \n  group_by(BOROUGH) %>% \n  mutate(proportion = total / sum(total))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'BOROUGH'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nheat %>% \n  ggplot(aes(CATEGORY, BOROUGH, fill = proportion)) +\n  geom_tile() +\n  geom_label(aes(label = my_pct(heat$proportion), \n                 color = proportion, \n                 family = \"serif\"),\n             label.size = 0,\n             size = 5) +\n  scale_fill_gradient(low = \"#E9E4FC\", \n                      high = \"#570099\", \n                      limits = c(0,1), \n                      guide = \"none\") +\n  scale_color_gradient(low = \"#570099\", \n                       high = \"black\", \n                       guide = \"none\") +\n  scale_x_discrete(labels = str_wrap(heat$CATEGORY, width = 11)) +\n  labs(x = NULL,\n       y = NULL,\n       fill = NULL,\n       title = \"Essential Projects\",\n       subtitle = \"by borough and category\") +\n  coord_equal() +\n  theme_light() +  \n  theme(text = element_text(family = \"serif\"),\n        title = element_text(size = 16, \n                             family = \"sans\", \n                             face = \"bold\"),\n        legend.title = element_text(size = 10, \n                                    family = \"sans\"),\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        axis.ticks = element_blank(),\n        panel.border = element_blank(),\n        legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](JamieEsmond-04-exercise_files/figure-pdf/plot-heatmap-1.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "JamieEsmond-04-exercise_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}