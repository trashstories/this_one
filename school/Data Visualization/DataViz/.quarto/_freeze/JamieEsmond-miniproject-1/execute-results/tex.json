{
  "hash": "31b430e264568d37cca3fc50863cee46",
  "result": {
    "markdown": "---\ntitle: \"Mini Project 1\"\nauthor: \"Jamie Pantazi Esmond\"\ndate: \"today\"\ndate-format: \"long\"\nformat: \n  html: \n    toc: true\n    theme: custom.scss\n    fig-cap-location: \"top\"\n    tbl-cap-location: \"top\"\n    title-block-banner: true\n    title-block-banner-color: \"#744FC6\"\n    fig-align: \"center\"\n  pdf: \n    toc: true\n    lof: true\n    mainfont: \"Cambria\"\n    fig-cap-location: \"top\"\n    code-line-numbers: true\n    fig-align: \"center\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\\newpage\n\n# Mini Project 1\n\n## Memo\n\nHow did you apply Kieran Healy’s principles of great visualizations or Alberto Cairo’s five qualities of great visualizations?\n\nRat sightings in New York City are no new phenomenon; in a city as old and dense as the Big Apple, rodents and other pests are sure to be lurking, hoping to seize on an opportunity for warmth or free food. But where are they mostly likely to be spotted? Between 2010 and 2016, rats were spotted more often in family buildings than in buildings not used as family residences. This was true across all five boroughs, and the trends among family buildings and other buildings remained parallel (increasing overtime, especially in the more densely populated boroughs). Among family buildings, buildings with more than two family residences in Manhattan, Brooklyn, and the Bronx had a higher and more rapidly increasing number of sightings. Queens and Staten Island had lower numbers in multifamily buildings, but that is likely because there are more single family buildings in those boroughs.\n\nUsing a line graph to show the change in rat sightings overtime in each borough allows for easy comparison over time and between boroughs. The graphs have each been split into two categories; the first graph is split between rat sightings in buildings with family residences and in buildings without family residences, and the second graph is split between one or two family homes and three or more family homes. High contrast colors are used to distinguish each borough against a plain black text for titles and other indicators. The same colors are used consistently between each plot and group. Both plots use the same contrasting font styles, using sans serif for the axis and facet titles and serif font for the title and axis labels. All four line plots are aligned in a grid for easy comparison. \n\nThe plot is meant to be read from left to right, top to bottom, as one would read from a book. This allows the viewer to clearly see that the lines for family buildings are higher than other buildings in the top graphs, and then see the difference between different types of family buildings.\n\nThere are many different ways to tell the truth about rats in the city, this visualization is based on a record of reported rat sightings, and while it may have its flaws (i.e., misreported sightings, missing unreported sightings), it is understood to be an accurate representation of rats in the real world coming in contact with humans. By looking at the changes in the data over time, between boroughs, and in different types of buildings, the viewer can use the graphic in conjunction with what they already know about the city and its boroughs to draw conclusions about the occurrences of rat sightings. High contrast colors and meaningful but simple indicators help convey the information in an aesthetically pleasing manor. The layout and progression of the line graphs tell the story about where rats are seen in NYC and which building types get the most reported sightings.\n\n\\newpage\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(scales)\nlibrary(gghalves) \nlibrary(patchwork)\n\ncolors <- c(\"#7400CC\", \"#3ACC14\", \"#CC0AA4\", \"#CCAC14\", \"#0E0ACC\")\n\nrats <- read_csv(\"data/Rat_Sightings.csv\") %>% \n  filter(Borough != \"Unspecified\") %>% \n  mutate(Borough = str_to_title(Borough)) %>% \n  mutate(fam = ifelse(str_detect(`Location Type`, \"Family\"), \n                      \"Family Buildings\", \n                      \"Other Buildings\")) %>% \n  mutate(type = case_when(str_detect(`Location Type`, \"3\") ~ \"3+ Family Buildings\", \n                          str_detect(`Location Type`, \"1-2\") ~ \"1-2 Family Buildings\",\n                          TRUE ~ \"Other\")) %>% \n  mutate(created_date = mdy_hms(`Created Date`)) %>%\n  mutate(year = year(created_date),\n         month = month(created_date),\n         day = day(created_date),\n         weekday = wday(as.Date(`Created Date`), label = TRUE, abbr = FALSE)) %>% \n  filter(year != 2017)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr1 <- rats %>% \n  group_by(Borough, year, fam) %>% \n  summarise(famCount = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Borough', 'year'. You can override using\nthe `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nrats <- r1 %>% \n  left_join(rats, by = c(\"Borough\", \"year\", \"fam\"))\n\nr2 <- rats %>% \n  group_by(Borough, year, type) %>% \n  summarise(typeCount = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Borough', 'year'. You can override using\nthe `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nrats <- r2 %>% \n  left_join(rats, by = c(\"Borough\", \"year\", \"type\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfamplot <- rats %>% \n  drop_na(`Location Type`) %>% \n  group_by(Borough, year, fam, famCount) %>% \n  summarise(count = n()) %>% \n  ggplot(aes(year, famCount, \n             fill = Borough, color = Borough)) +\n  geom_line(linewidth = 1.25) + \n  facet_wrap(~ fam, ncol = 2) +\n  scale_color_manual(values = colors,\n                     limits = c(\"Manhattan\",\n                                \"Bronx\",\n                                \"Brooklyn\",\n                                \"Queens\",\n                                \"Staten Island\"),\n                     guide = \"none\") +\n  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  labs(x = NULL,\n       y = \"Rat Sightings\",\n       color = NULL,\n       title = \"Rats in NYC\",\n       subtitle = \"They are in our homes!\") +\n  theme_light() +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(color = \"black\", face = \"bold\", vjust = -1.5),\n        axis.text = element_text(family = \"serif\"),\n        axis.title = element_text(size = 7, face = \"bold\"),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line(color = \"#FDDEED\"),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_blank(),\n        legend.position = \"bottom\",\n        plot.title = element_text(family = \"serif\", size = 14, face = \"bold\"),\n        plot.subtitle = element_text(family = \"serif\", size = 12))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Borough', 'year', 'fam'. You can override\nusing the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntypeplot <- rats %>% \n  drop_na(`Location Type`) %>% \n  filter(type != \"Other\") %>% \n  group_by(Borough, year, type, typeCount) %>% \n  summarise(count = n()) %>% \n  ggplot(aes(year, typeCount, \n             fill = Borough, color = Borough)) +\n  geom_line(linewidth = 1.25) + \n  facet_wrap(~ type, ncol = 2) +\n  scale_color_manual(values = colors,\n                     limits = c(\"Manhattan\",\n                                \"Bronx\",\n                                \"Brooklyn\",\n                                \"Queens\",\n                                \"Staten Island\")) +\n  scale_fill_manual(values = colors, guide = \"none\") +\n  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  labs(x = NULL,\n       y = \"Rat Sightings\",\n       color = NULL,\n       subtitle = \"And multi-home buildings are worse!\") +\n  theme_light() +\n  theme(strip.background = element_blank(),\n        strip.text = element_text(color = \"black\", face = \"bold\", vjust = -1.5),\n        axis.text = element_text(family = \"serif\"),\n        axis.title = element_text(size = 7, face = \"bold\"),\n        panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_line(color = \"#FDDEED\"),\n        panel.grid.minor = element_blank(),\n        panel.border = element_blank(),\n        axis.ticks = element_blank(),\n        panel.background = element_blank(),\n        legend.position = \"bottom\",\n        plot.subtitle = element_text(family = \"serif\", size = 12))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Borough', 'year', 'type'. You can override\nusing the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nplot <- famplot / typeplot \n\nggsave(plot, filename = \"output/rats.png\", width = 7, height = 7 / 1.618)\nggsave(plot, filename = \"output/rats.pdf\", width = 7, height = 7 / 1.618)\n\nplot\n```\n\n::: {.cell-output-display}\n![Rats in NYC](JamieEsmond-miniproject-1_files/figure-pdf/plot-1.pdf){fig-pos='H'}\n:::\n:::",
    "supporting": [
      "JamieEsmond-miniproject-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}