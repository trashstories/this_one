{
  "hash": "ee23e30b77c933760211eb6871640f0e",
  "result": {
    "markdown": "---\ntitle: \"Exercise 12\"\nauthor: \"Jamie Pantazi Esmond\"\ndate: \"today\"\ndate-format: \"long\"\nformat: \n  html: \n    toc: true\n    theme: custom.scss\n    fig-cap-location: \"top\"\n    tbl-cap-location: \"top\"\n    title-block-banner: true\n    title-block-banner-color: \"#744FC6\"\n    fig-align: \"center\"\n  pdf: \n    toc: true\n    lof: true\n    mainfont: \"Cambria\"\n    fig-cap-location: \"top\"\n    code-line-numbers: true\n    fig-align: \"center\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\\newpage\n\n# Task 1: Reflection\n\nI see that you have copied my road trip map idea for yourself (and did so much more, of course!); now I am going to be up until 4 in the morning, trying to improve mine by following your blog posts. I just need to get caught up, so just is obviously not finished work, but it is a finished assignment. The subject is simply far to interesting to me; I must stop myself before I go too far!\n\n\\newpage\n\n# Task 2: World map\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(scales)\nlibrary(tigris)        # Access geographic data from the US Census\nlibrary(tidygeocoder)  # Automated geocoding\nlibrary(osrm)          # Access OSRM through R\nlibrary(ggrepel)       # Nicer non-overlapping labels\nlibrary(glue)          # Easier string interpolation\nlibrary(patchwork)     # Combine plots nicely\nlibrary(ggspatial)     # Nicer map features like scale bars\nlibrary(jsonlite)      # Read JSON files\nlibrary(patchwork)     # Combine plots nicely\nlibrary(leaflet)       # Make interactive maps\nlibrary(lutz)          # Look up time zones for lat/lon coordinates\nlibrary(gt)            # Make fancy tables\nlibrary(rcartocolor)   # Use CARTO colors (https://carto.com/carto-colors/)\nlibrary(ggnewscale)    # Use multiple scales for the same aesthetic in ggplot\n\n# Load and clean internet user data\ninternet_users <- read_csv(\"data/share-of-individuals-using-the-internet-1990-2015.csv\") %>%\n  # Rename country code column to ISO_A3 so it matches what's in the Natural Earth shapefile\n  rename(users = `Individuals using the Internet (% of population) (% of population)`,\n         ISO_A3 = Code)\n\n# Load world shapefile from Natural Earth\n# https://www.naturalearthdata.com/downloads/110m-cultural-vectors/\nworld_shapes <- read_sf(\"data/ne_110m_admin_0_countries/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shp\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Only look at 2015\nusers_2015 <- internet_users %>%\n  filter(Year == 2015)\n\nusers_map <- world_shapes %>%\n  left_join(users_2015, by = \"ISO_A3\") %>%\n  filter(ISO_A3 != \"ATA\")  # No internet in Antarctica. Sorry penguins.\n```\n:::\n\n\n\nMake a map showing the proportion of individuals in each country that had access to the internet in 2015.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# TODO: Make a map of internet users with ggplot() + geom_sf()\n# Important: Remember to consider the map projection\n\nusers_map %>% \n  ggplot() +\n  geom_sf(aes(fill = users)) +\n  # annotation_scale(location = \"bl\", bar_cols = c(\"grey20\", \"white\"),\n  #                  unit_category = \"imperial\") +\n  coord_sf(crs = st_crs(\"ESRI:54030\")) +  # Robinson\n  scale_fill_steps(low = \"#E9E4FC\", high = \"#6610F2\", na.value = \"white\", \n                   breaks = c(0,25,50,75,100), label = label_percent(scale = 1)) +\n  labs(fill = \"% Internet Users\",\n       title = \"Internet Users Around the World\") +\n  theme_void() +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(family = \"serif\", face = \"bold\", hjust = .5))\n```\n\n::: {.cell-output-display}\n![Internet Users Around the World](JamieEsmond-12-exercise_files/figure-pdf/plot-2015-internet-uses-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\\newpage\n\n# Task 3: Personal map\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# TODO: Make a map\n\ncolors <- c(\"#7400CC\", \"#CC0AA4\", \"#0E0ACC\", \"#3ACC14\", \n            \"#CCAC14\", \"#0ACCC5\", \"#CC5514\")\n\ntogether <- read_rds(\"data/together.rds\") %>% \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = st_crs(\"EPSG:4326\"))\n\nus_states <- states(resolution = \"20m\", year = 2022, cb = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\nmy_states <- us_states %>% \n  filter((NAME %in% c(\"Texas\", \n                      \"Louisiana\", \n                      \"Mississippi\",\n                      \"Alabama\",\n                      \"Georgia\",\n                      \"Florida\",\n                      \"Maryland\",\n                      \"New Mexico\")))\n\nggplot() + \n  geom_sf(data = my_states, fill = \"#CCc1DA\") +\n  geom_sf(data = together, aes(color = year)) +\n  coord_sf(crs = st_crs(\"ESRI:102003\")) +  # Albers\n  scale_color_manual(values = colors) +\n  labs(color = NULL,\n       title = \"Pre-Wedding Travels\",\n       subtitle = \"I am going to update this, but tonight, I must sleep\",\n       caption = str_wrap(\"*There is a lot of points and elements to add to this, but if I even try to start right now, nothing else in my life will ever get done, but it is a goal of mine to finish updating our map with R before we are done working together.\", 125)) +\n  theme_void() +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(family = \"serif\", face = \"bold\"),\n        plot.subtitle = element_text(family = \"serif\"),\n        plot.caption =  element_text(family = \"serif\"))\n```\n\n::: {.cell-output-display}\n![Not A Finished Map...](JamieEsmond-12-exercise_files/figure-pdf/personal-map-1.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "JamieEsmond-12-exercise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}