---
title: "Exercise 6"
author: "Jamie Pantazi Esmond"
date: "today"
date-format: "long"
format: 
  html: 
    toc: true
    theme: custom.scss
    fig-cap-location: "top"
    tbl-cap-location: "top"
    title-block-banner: true
    title-block-banner-color: "#744FC6"
    fig-align: "center"
  pdf: 
    toc: true
    lof: true
    mainfont: "Cambria"
    fig-cap-location: "top"
    code-line-numbers: true
    fig-align: "center"
editor_options: 
  chunk_output_type: console
---

\newpage

# Task 1: Reflection

Although we like to think that data always accurately represents the real world events that we want to measure, there are many reasons why we might be uncertain about the truth of the data. Even when dealing with data that represents something that has already happened, there are many reasons that the data could still have uncertainty. However, using data to predict the future may contain even more uncertainty.

I actually really liked the 2016 election gauge. I can definitely understand why the confusion happened, but I think a simple disclaimer in the broadcast explaining what the jittering meant would have resolved that. My one critique of the visual is the use of the gauge symbol itself. Since gauges in the real world are used to measure things precisely, sometimes with extreme accuracy, you would not want the needle to be moving unless it was in real time. However, I believe that there may be other symbols that the data could have been mapped onto to better represent uncertainty. It might be interesting if there were liquid elements in a container (separated like oil and water), one red and one blue; the natural movement of the water where they meet would fluctuate around the estimation. This visual would be less likely to be interpreted as real time changes, but as the night goes on the waves lessen and the uncertainty window is narrowed, like the settling of liquid over time; more uncertainty = larger, unsteady waves, and as the margin closes, calmer, steadier liquid.

\newpage

# Task 2: Visualizing uncertainty with gapminder

For this exercise you'll revisit Hans Rosling's gapminder data on health and wealth. Install the {gapminder} package if you haven't already. Also install the {ggridges} and {gghalves} packages.

```{r load-libraries-data, warning=FALSE, message=FALSE}
library(tidyverse)  # For ggplot, dplyr, and friends
library(gapminder)  # For health/wealth data
library(ggridges)   # For ridge plots
library(gghalves)   # For half geoms
library(scales)

colors <- c("#7400CC", "#3ACC14", "#CC0AA4", "#CCAC14", "#0E0ACC")

dllr <- label_number(accuracy = 0, prefix = "$")

```

## Histograms

Make a histogram of *logged* GDP per capita for 1997 only, across all five continents.

```{r filter-gapminder-1997}
# Create a filtered dataset

g97 <- gapminder %>% 
  filter(year == 1997)

```

```{r plot-histogram}
#| fig-width: 7.5
#| fig-height: 5
#| fig-cap: "Distribution of GDP per capita"
# Add a histogram here. You'll probably want to fill and facet.
# You'll also need to add scale_x_log10()

g97 %>% 
  filter(continent != "Oceania") %>% 
  ggplot(aes(gdpPercap, fill = continent)) +
  geom_histogram(color = "white", bins = 20, boundary = 0) +
  geom_hline(yintercept = seq(1,10,1), color = "white") + 
  scale_x_log10(n.breaks = 6, labels = label_dollar(accuracy = 1, scale_cut = cut_short_scale())) +
  scale_y_continuous(breaks = seq(0,10,2), expand = c(0,0)) +
  scale_fill_manual(values = colors, guide = "none") +
  facet_wrap(~ continent) +
  labs(x = "GDP per capita",
       y = "Number of Countries",
       fill = NULL,
       title = "Distribution of GDP per capita",
       subtitle = "Number of Countries by Continent 1997") +
  theme_light() +
  theme(strip.background = element_blank(),
        strip.text = element_text(color = "black", face = "bold", vjust = -1.5),
        axis.text = element_text(family = "serif"),
        panel.grid.major.x = element_line(color = "#FDDEED", linetype = "longdash"),
        panel.grid.major.y = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank(),
        panel.background = element_blank())

```

## Densities

Make a ridge plot of life expectancy over time, from 1952 to 2007. You'll need to use the full gapminder data, not the 1997-only data.

```{r plot-ridgeplot}
#| fig-height: 10
#| fig-width: 7.5
#| fig-cap: "Life Expectancy Around the World"
# Add a ridge plot here

gapminder %>% 
  filter(continent != "Oceania") %>% 
  ggplot(aes(lifeExp, factor(year))) +
  geom_density_ridges(fill = "#FDDEED", color = "#E900F5", aes(linetype = "World")) +
  geom_density_ridges(aes(fill = continent, color = continent), alpha = .5) +
  scale_linetype_manual(values = c("longdash")) +
  scale_fill_manual(values = colors) +
  scale_color_manual(values = colors) +
  scale_x_continuous(breaks = seq(0,100,20)) +
  scale_y_discrete(limits = rev) +
  labs(x = "Life Expectancy",
       y = NULL,
       fill = NULL,
       color = NULL,
       linetype = NULL,
       title = "Life Expectancy Around the World",
       subtitle = "1952-2007 by Contintent") +
  theme_light() +
  theme(legend.position = "right",
        panel.grid.major.x = element_line(color = "#FDDEED", linetype = "longdash"),
        panel.grid.major.y = element_line(color = "#FAA6F5"),
        panel.grid.minor = element_blank(),
        axis.text = element_text(family = "serif"),
        legend.text = element_text(family = "serif"),
        strip.background = element_blank(),
        strip.text = element_blank())


```

## Boxes, violins, and friends

Make a filtered dataset that selects data from only 2007 *and* removes Oceania. Show the distribution of *logged* GDP per capita across the *four* continents using some combination of boxplots and/or violin plots and/or strip plots, either overlaid on top of each other, or using their `geom_half_*()` counterparts from {gghalves}.

```{r filter-gapminder-2007-sans-oceania}
# Create a filtered dataset

g07 <- gapminder %>% 
  filter(continent != "Oceania")

```

```{r plot-distribution}
#| fig-width: 7.5
#| fig-height: 4.635352
#| fig-cap: "Distribution of GDP per capita among Continents"
# Add a plot here. You'll want to use either scale_x_log10() or scale_y_log10(),
# depending on which direction your boxplots/violin plots/etc. go


g07 %>% 
  ggplot(aes(continent, gdpPercap, color = continent, fill = continent)) +
  geom_half_point(side = "l", size = .4, alpha = .75) + 
  geom_half_boxplot(side = "l", width = .6, 
                    alpha = 0.3, nudge = 0.1) +
  geom_half_violin(side = "r", alpha = .75) +
  scale_x_discrete(limits = rev) +
  scale_y_log10(n.breaks = 6, labels = label_dollar(accuracy = 1)) +
  scale_fill_manual(values = colors, guide = "none") +
  scale_color_manual(values = colors, guide = "none") +
  labs(x = NULL,
       y = "GDP per capita",
       fill = NULL,
       color = NULL,
       title = "Distribution of GDP per capita among Continents 2007") +
  coord_flip() +
  theme_light() +
  theme(panel.grid = element_blank(),
        panel.border = element_blank(),
        axis.ticks = element_blank(),
        axis.text.x = element_text(family = "serif"),
        axis.text.y = element_text(family = "serif", size = 14))

```
