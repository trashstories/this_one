---
title: "Exercise 14"
author: "Jamie Pantazi Esmond"
date: "today"
date-format: "long"
format: 
  pdf: 
    toc: true
    mainfont: "Cambria"
    fig-cap-location: "top"
    code-line-numbers: true
    fig-align: "center"
editor_options: 
  chunk_output_type: console
---

# Task 1: Reflection

I am really not a fan of Adobe Illustrator. While it does seem to be very powerful, it is not intuitive and sometimes seems to have a mind of its own. When I first opened the graphics, it made some sense regarding the layers and groups, but the selections were visibly selected, so I knew what I was working with. But at some point, it started selecting in white, so I could barely tell what was selected at any given point. Later on, I imported a new version with modifications, and then it started placing each letter as its own layer. So to move one label, I have to select each individual letter (and since the selection is white, either I cannot tell what is selected on the image itself, or if the letter is small, the white selection obscures the element itself). I am not sure if this is design thing or a bug (or I changed settings by accident-which did happen a few times and I am not sure why), but I prefer to do as much with code as possible because I know how to communicate with code. (Also, R stuff is so much better to google for help.)

# Task 2: Enhanced plot

When you knit this document, you will create and save a basic bar chart of hot dog eating contest winners. You will then open the resulting file in Illustrator or Gravit Designer. Open the PDF in Illustrator; open the SVG in Gravit Designer.

Be sure that you save your file in Illustrator or Gravit Designer **with a different name**. You don't want to accidentally overwrite all your enhancements and updates when you knit this document. That would be so sad.

```{r make-and-save-hot-dog-plot, warning=FALSE}
library(tidyverse)
library(svglite)

hotdogs <- read_csv("data/hot-dog-contest-winners.csv") %>%
  rename(dogs = `Dogs eaten`, record = `New record`) %>%
  mutate(record = factor(record))

# Change the colors here if you want
# (or anything else if you want too)
plot_hotdogs <- ggplot(hotdogs, 
                       aes(x = Year, y = dogs, fill = record)) + 
  geom_col() + 
  scale_fill_manual(values = c("#E0CFFF", "#7400CC")) +
  scale_x_continuous(breaks = seq(1980, 2010, 2), 
                     expand = c(0, 0)) +
  scale_y_continuous(breaks = seq(0, 70, 10), 
                     expand = c(0, 0)) +
  guides(fill = "none") +
  labs(y = "Hot dogs and buns", x = NULL) +
  theme_minimal() +
  theme(panel.background = element_rect(fill = "transparent", colour = NA),
        plot.background = element_rect(fill = "transparent", colour = NA),
        axis.ticks.x = element_line(size = 0.25),
        axis.text = element_text(family = "serif"),
        panel.grid.major.x = element_blank(),
        panel.grid.major.y = element_line(size = 0.5, linetype = "longdash"),
        panel.grid.minor = element_blank())

plot_hotdogs

# Change the dimensions here if you want
ggsave(plot_hotdogs, filename = "hotdogs.pdf", device = cairo_pdf,
       width = 7, height = 4, units = "in", bg = "transparent")

ggsave(plot_hotdogs, filename = "hotdogs.svg",
       width = 7, height = 4, units = "in", bg = "transparent")
```
