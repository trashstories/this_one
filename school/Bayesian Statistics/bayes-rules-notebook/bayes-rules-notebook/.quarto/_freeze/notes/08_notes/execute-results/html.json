{
  "hash": "191fc41ede6009efd288b761675ff6e4",
  "result": {
    "markdown": "---\ntitle: \"8: Posterior Inference & Prediction\"\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(bayesrules)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(rstan)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: StanHeaders\nrstan (Version 2.21.8, GitRev: 2e1f913d3ca3)\nFor execution on a local, multicore CPU with excess RAM we recommend calling\noptions(mc.cores = parallel::detectCores()).\nTo avoid recompilation of unchanged Stan programs, we recommend calling\nrstan_options(auto_write = TRUE)\nDo not specify '-march=native' in 'LOCAL_CPPFLAGS' or a Makevars file\n\nAttaching package: 'rstan'\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n```\n:::\n\n```{.r .cell-code}\nlibrary(bayesplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is bayesplot version 1.10.0\n- Online documentation and vignettes at mc-stan.org/bayesplot\n- bayesplot theme set to bayesplot::theme_default()\n   * Does _not_ affect other ggplot2 plots\n   * See ?bayesplot_theme_set for details on theme setting\n```\n:::\n\n```{.r .cell-code}\nlibrary(broom.mixed)\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\n# Load data\ndata(\"moma_sample\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoma_sample %>% \n  group_by(genx) %>% \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  genx      n\n  <lgl> <int>\n1 FALSE    86\n2 TRUE     14\n```\n:::\n\n```{.r .cell-code}\nplot_beta_binomial(alpha = 4, beta = 6, y = 14, n = 100)\n```\n\n::: {.cell-output-display}\n![](08_notes_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 0.025th & 0.975th quantiles of the Beta(18,92) posterior\nqbeta(c(0.025, 0.975), 18, 92)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1009084 0.2379286\n```\n:::\n\n```{.r .cell-code}\n# 0.25th & 0.75th quantiles of the Beta(18,92) posterior\nqbeta(c(0.25, 0.75), 18, 92)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1388414 0.1862197\n```\n:::\n\n```{.r .cell-code}\n# 0.005th & 0.995th quantiles of the Beta(18,92) posterior\nqbeta(c(0.005, 0.995), 18, 92)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.08530422 0.26468037\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Posterior probability that pi < 0.20\npost_prob <- pbeta(0.20, 18, 92)\npost_prob\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8489856\n```\n:::\n\n```{.r .cell-code}\n# Posterior odds\npost_odds <- post_prob / (1 - post_prob)\npost_odds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.621883\n```\n:::\n\n```{.r .cell-code}\n# Prior probability that pi < 0.2\nprior_prob <- pbeta(0.20, 4, 6)\nprior_prob\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.08564173\n```\n:::\n\n```{.r .cell-code}\n# Prior odds\nprior_odds <- prior_prob / (1 - prior_prob)\nprior_odds\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.09366321\n```\n:::\n\n```{.r .cell-code}\n# Bayes factor\nBF <- post_odds / prior_odds\nBF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 60.02232\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# STEP 1: DEFINE the model\nart_model <- \"data {int<lower = 0, upper = 100> Y;} parameters {real<lower = 0, upper = 1> pi;} model {Y ~ binomial(100, pi); pi ~ beta(4, 6);}\"\n\nart_model\n\n# STEP 2: SIMULATE the posterior\nart_sim <- stan(model_code = art_model, data = list(Y = 14), \n                chains = 4, iter = 5000*2, seed = 84735)\n\n# Parallel trace plots & density plots\nmcmc_trace(art_sim, pars = \"pi\", size = 0.5) + \n  xlab(\"iteration\")\nmcmc_dens_overlay(art_sim, pars = \"pi\")\n\n# Autocorrelation plot\nmcmc_acf(art_sim, pars = \"pi\")\n\n# Markov chain diagnostics\nrhat(art_sim, pars = \"pi\")\n\nneff_ratio(art_sim, pars = \"pi\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# The actual Beta(18, 92) posterior\nplot_beta(alpha = 18, beta = 92) + \n  lims(x = c(0, 0.35))\n\n# MCMC posterior approximation\nmcmc_dens(art_sim, pars = \"pi\") +\n  lims(x = c(0,0.35))\n\ntidy(art_sim, conf.int = TRUE, conf.level = 0.95)\n\n# Shade in the middle 95% interval\nmcmc_areas(art_sim, pars = \"pi\", prob = 0.95)\n\n# Store the 4 chains in 1 data frame\nart_chains_df <- as.data.frame(art_sim, pars = \"lp__\", include = FALSE)\ndim(art_chains_df)\n\n# Calculate posterior summaries of pi\nart_chains_df %>% \n  summarize(post_mean = mean(pi), \n            post_median = median(pi),\n            post_mode = sample_mode(pi),\n            lower_95 = quantile(pi, 0.025),\n            upper_95 = quantile(pi, 0.975))\n\n# Tabulate pi values that are below 0.20\nart_chains_df %>% \n  mutate(exceeds = pi < 0.20) %>% \n  tabyl(exceeds)\n\n# Set the seed\nset.seed(1)\n\n# Predict a value of Y' for each pi value in the chain\nart_chains_df <- art_chains_df %>% \n  mutate(y_predict = rbinom(length(pi), size = 20, prob = pi))\n\n# Check it out\nart_chains_df %>% \n  head(3)\n\n# Plot the 20,000 predictions\nggplot(art_chains_df, aes(x = y_predict)) + \n  stat_count()\n\nart_chains_df %>% \n  summarize(mean = mean(y_predict),\n            lower_80 = quantile(y_predict, 0.1),\n            upper_80 = quantile(y_predict, 0.9))\n```\n:::\n",
    "supporting": [
      "08_notes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}