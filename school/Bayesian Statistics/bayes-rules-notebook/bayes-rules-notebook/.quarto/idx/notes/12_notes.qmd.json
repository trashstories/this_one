{"title":"12: Poisson & Negative Binomial Regression","markdown":{"yaml":{"title":"12: Poisson & Negative Binomial Regression","editor_options":{"chunk_output_type":"console"}},"headingText":"Load packages","containsRefs":false,"markdown":"\n\n```{r setup, warning=FALSE, message=FALSE}\n\nlibrary(bayesrules)\nlibrary(rstanarm)\nlibrary(bayesplot)\nlibrary(tidyverse)\nlibrary(tidybayes)\nlibrary(broom.mixed)\n\ncolors <- c(\"#7400CC\", \"#CC0AA4\", \"#3ACC14\", \"#0E0ACC\", \"#CCAC14\", \n            \"#CC5514\", \"#0ACCC5\")\n\n# Load data\ndata(equality_index)\nequality <- equality_index\n\n```\n\n```{r}\n\nggplot(equality, aes(x = laws)) + \n  geom_histogram(color = \"white\", breaks = seq(0, 160, by = 10))\n\n# Identify the outlier\nequality %>% \n  filter(laws == max(laws))\n\n# Remove the outlier\nequality <- equality %>% \n  filter(state != \"california\")\n\nggplot(equality, aes(y = laws, x = percent_urban, color = historical)) + \n  geom_point() +\n  scale_color_manual(values = colors)\n\n```\n\n```{r, cache=TRUE}\n\n# Simulate the Normal model\nequality_normal_sim <- stan_glm(laws ~ percent_urban + historical, \n                                data = equality, \n                                family = gaussian,\n                                prior_intercept = normal(7, 1.5),\n                                prior = normal(0, 2.5, autoscale = TRUE),\n                                prior_aux = exponential(1, autoscale = TRUE),\n                                chains = 4, iter = 5000*2, seed = 84735)\n\n# Posterior predictive check\npp_check(equality_normal_sim, plotfun = \"hist\", nreps = 5) + \n  geom_vline(xintercept = 0) + \n  xlab(\"laws\")\n\n```\n\n# 12.1 Building the Poisson regression model\n\n## 12.1.2 Specifying the priors\n\n```{r, cache=TRUE}\n\nequality_model_prior <- stan_glm(laws ~ percent_urban + historical, \n                                 data = equality, \n                                 family = poisson,\n                                 prior_intercept = normal(2, 0.5),\n                                 prior = normal(0, 2.5, autoscale = TRUE), \n                                 chains = 4, iter = 5000*2, seed = 84735, \n                                 prior_PD = TRUE)\n\nprior_summary(equality_model_prior)\n\nequality %>% \n  add_fitted_draws(equality_model_prior, n = 100) %>%\n  ggplot(aes(x = percent_urban, y = laws, color = historical)) +\n    geom_line(aes(y = .value, group = paste(historical, .draw))) + \n    ylim(0, 100) +\n  scale_color_manual(values = colors)\n\n```\n\n# 12.2 Simulating the posterior\n\n```{r, cache=TRUE}\n\nequality_model <- update(equality_model_prior, prior_PD = FALSE)\n\nmcmc_trace(equality_model)\nmcmc_dens_overlay(equality_model)\nmcmc_acf(equality_model)\n\nset.seed(1)\npp_check(equality_model, plotfun = \"hist\", nreps = 5) + \n  xlab(\"laws\")\npp_check(equality_model) + \n  xlab(\"laws\")\n\n```\n\n# 12.3 Interpreting the posterior\n\n```{r}\n\nequality %>%\n  add_fitted_draws(equality_model, n = 50) %>%\n  ggplot(aes(x = percent_urban, y = laws, color = historical)) +\n    geom_line(aes(y = .value, group = paste(historical, .draw)), \n              alpha = .1) +\n    geom_point(data = equality, size = 0.1) +\n  scale_color_manual(values = colors)\n\ntidy(equality_model, conf.int = TRUE, conf.level = 0.80)\n\n```\n\n# 12.4 Posterior prediction\n\n```{r}\n\nequality %>% \n  filter(state == \"minnesota\")\n\n# Calculate posterior predictions\nset.seed(84735)\nmn_prediction <- posterior_predict(\n  equality_model, newdata = data.frame(percent_urban = 73.3, \n                                       historical = \"dem\"))\nhead(mn_prediction, 3)\n\nmcmc_hist(mn_prediction, binwidth = 1) + \n  geom_vline(xintercept = 4) + \n  xlab(\"Predicted number of laws in Minnesota\")\n\n# Predict number of laws for each parameter set in the chain\nset.seed(84735)\nas.data.frame(equality_model) %>% \n  mutate(log_lambda = `(Intercept)` + percent_urban*73.3 + \n           historicalgop*0 + historicalswing*0,\n         lambda = exp(log_lambda),\n         y_new = rpois(20000, lambda = lambda)) %>% \n  ggplot(aes(x = y_new)) + \n    stat_count()\n\n```\n\n# 12.5 Model evaluation\n\n```{r, cache=TRUE}\n\n# Simulate posterior predictive models for each state\nset.seed(84735)\npoisson_predictions <- posterior_predict(equality_model, newdata = equality)\n\n# Plot the posterior predictive models for each state\nppc_intervals_grouped(equality$laws, yrep = poisson_predictions, \n                      x = equality$percent_urban, \n                      group = equality$historical,\n                      prob = 0.5, prob_outer = 0.95,\n                      facet_args = list(scales = \"fixed\"))\n\nprediction_summary(model = equality_model, data = equality)\n\n# Cross-validation\nset.seed(84735)\npoisson_cv <- prediction_summary_cv(model = equality_model, \n                                    data = equality, k = 10)\n\n```\n\n# 12.6 Negative Binomial regression for overdispersed counts\n\n```{r}\n\n# Load data\ndata(pulse_of_the_nation)\npulse <- pulse_of_the_nation %>% \n  filter(books < 100)\n\nggplot(pulse, aes(x = books)) + \n  geom_histogram(color = \"white\")\nggplot(pulse, aes(y = books, x = age)) + \n  geom_point()\nggplot(pulse, aes(y = books, x = wise_unwise)) + \n  geom_boxplot()\n\n```\n\n```{r, cache=TRUE}\n\nbooks_poisson_sim <- stan_glm(\n  books ~ age + wise_unwise, \n  data = pulse, family = poisson,\n  prior_intercept = normal(0, 2.5, autoscale = TRUE),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735)\n\npp_check(books_poisson_sim) + \n  xlab(\"books\")\n\n# Mean and variability in readership across all subjects\npulse %>% \n  summarize(mean = mean(books), var = var(books))\n\n```\n\n```{r, cache=TRUE}\n\nbooks_negbin_sim <- stan_glm(\n  books ~ age + wise_unwise, \n  data = pulse, family = neg_binomial_2,\n  prior_intercept = normal(0, 2.5, autoscale = TRUE),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735)\n\n# Check out the priors\nprior_summary(books_negbin_sim)\n\npp_check(books_negbin_sim) + \n  xlim(0, 75) + \n  xlab(\"books\")\n\n# Numerical summaries\ntidy(books_negbin_sim, conf.int = TRUE, conf.level = 0.80)\n\n```\n\n","srcMarkdownNoYaml":"\n\n```{r setup, warning=FALSE, message=FALSE}\n\n# Load packages\nlibrary(bayesrules)\nlibrary(rstanarm)\nlibrary(bayesplot)\nlibrary(tidyverse)\nlibrary(tidybayes)\nlibrary(broom.mixed)\n\ncolors <- c(\"#7400CC\", \"#CC0AA4\", \"#3ACC14\", \"#0E0ACC\", \"#CCAC14\", \n            \"#CC5514\", \"#0ACCC5\")\n\n# Load data\ndata(equality_index)\nequality <- equality_index\n\n```\n\n```{r}\n\nggplot(equality, aes(x = laws)) + \n  geom_histogram(color = \"white\", breaks = seq(0, 160, by = 10))\n\n# Identify the outlier\nequality %>% \n  filter(laws == max(laws))\n\n# Remove the outlier\nequality <- equality %>% \n  filter(state != \"california\")\n\nggplot(equality, aes(y = laws, x = percent_urban, color = historical)) + \n  geom_point() +\n  scale_color_manual(values = colors)\n\n```\n\n```{r, cache=TRUE}\n\n# Simulate the Normal model\nequality_normal_sim <- stan_glm(laws ~ percent_urban + historical, \n                                data = equality, \n                                family = gaussian,\n                                prior_intercept = normal(7, 1.5),\n                                prior = normal(0, 2.5, autoscale = TRUE),\n                                prior_aux = exponential(1, autoscale = TRUE),\n                                chains = 4, iter = 5000*2, seed = 84735)\n\n# Posterior predictive check\npp_check(equality_normal_sim, plotfun = \"hist\", nreps = 5) + \n  geom_vline(xintercept = 0) + \n  xlab(\"laws\")\n\n```\n\n# 12.1 Building the Poisson regression model\n\n## 12.1.2 Specifying the priors\n\n```{r, cache=TRUE}\n\nequality_model_prior <- stan_glm(laws ~ percent_urban + historical, \n                                 data = equality, \n                                 family = poisson,\n                                 prior_intercept = normal(2, 0.5),\n                                 prior = normal(0, 2.5, autoscale = TRUE), \n                                 chains = 4, iter = 5000*2, seed = 84735, \n                                 prior_PD = TRUE)\n\nprior_summary(equality_model_prior)\n\nequality %>% \n  add_fitted_draws(equality_model_prior, n = 100) %>%\n  ggplot(aes(x = percent_urban, y = laws, color = historical)) +\n    geom_line(aes(y = .value, group = paste(historical, .draw))) + \n    ylim(0, 100) +\n  scale_color_manual(values = colors)\n\n```\n\n# 12.2 Simulating the posterior\n\n```{r, cache=TRUE}\n\nequality_model <- update(equality_model_prior, prior_PD = FALSE)\n\nmcmc_trace(equality_model)\nmcmc_dens_overlay(equality_model)\nmcmc_acf(equality_model)\n\nset.seed(1)\npp_check(equality_model, plotfun = \"hist\", nreps = 5) + \n  xlab(\"laws\")\npp_check(equality_model) + \n  xlab(\"laws\")\n\n```\n\n# 12.3 Interpreting the posterior\n\n```{r}\n\nequality %>%\n  add_fitted_draws(equality_model, n = 50) %>%\n  ggplot(aes(x = percent_urban, y = laws, color = historical)) +\n    geom_line(aes(y = .value, group = paste(historical, .draw)), \n              alpha = .1) +\n    geom_point(data = equality, size = 0.1) +\n  scale_color_manual(values = colors)\n\ntidy(equality_model, conf.int = TRUE, conf.level = 0.80)\n\n```\n\n# 12.4 Posterior prediction\n\n```{r}\n\nequality %>% \n  filter(state == \"minnesota\")\n\n# Calculate posterior predictions\nset.seed(84735)\nmn_prediction <- posterior_predict(\n  equality_model, newdata = data.frame(percent_urban = 73.3, \n                                       historical = \"dem\"))\nhead(mn_prediction, 3)\n\nmcmc_hist(mn_prediction, binwidth = 1) + \n  geom_vline(xintercept = 4) + \n  xlab(\"Predicted number of laws in Minnesota\")\n\n# Predict number of laws for each parameter set in the chain\nset.seed(84735)\nas.data.frame(equality_model) %>% \n  mutate(log_lambda = `(Intercept)` + percent_urban*73.3 + \n           historicalgop*0 + historicalswing*0,\n         lambda = exp(log_lambda),\n         y_new = rpois(20000, lambda = lambda)) %>% \n  ggplot(aes(x = y_new)) + \n    stat_count()\n\n```\n\n# 12.5 Model evaluation\n\n```{r, cache=TRUE}\n\n# Simulate posterior predictive models for each state\nset.seed(84735)\npoisson_predictions <- posterior_predict(equality_model, newdata = equality)\n\n# Plot the posterior predictive models for each state\nppc_intervals_grouped(equality$laws, yrep = poisson_predictions, \n                      x = equality$percent_urban, \n                      group = equality$historical,\n                      prob = 0.5, prob_outer = 0.95,\n                      facet_args = list(scales = \"fixed\"))\n\nprediction_summary(model = equality_model, data = equality)\n\n# Cross-validation\nset.seed(84735)\npoisson_cv <- prediction_summary_cv(model = equality_model, \n                                    data = equality, k = 10)\n\n```\n\n# 12.6 Negative Binomial regression for overdispersed counts\n\n```{r}\n\n# Load data\ndata(pulse_of_the_nation)\npulse <- pulse_of_the_nation %>% \n  filter(books < 100)\n\nggplot(pulse, aes(x = books)) + \n  geom_histogram(color = \"white\")\nggplot(pulse, aes(y = books, x = age)) + \n  geom_point()\nggplot(pulse, aes(y = books, x = wise_unwise)) + \n  geom_boxplot()\n\n```\n\n```{r, cache=TRUE}\n\nbooks_poisson_sim <- stan_glm(\n  books ~ age + wise_unwise, \n  data = pulse, family = poisson,\n  prior_intercept = normal(0, 2.5, autoscale = TRUE),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735)\n\npp_check(books_poisson_sim) + \n  xlab(\"books\")\n\n# Mean and variability in readership across all subjects\npulse %>% \n  summarize(mean = mean(books), var = var(books))\n\n```\n\n```{r, cache=TRUE}\n\nbooks_negbin_sim <- stan_glm(\n  books ~ age + wise_unwise, \n  data = pulse, family = neg_binomial_2,\n  prior_intercept = normal(0, 2.5, autoscale = TRUE),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  prior_aux = exponential(1, autoscale = TRUE),\n  chains = 4, iter = 5000*2, seed = 84735)\n\n# Check out the priors\nprior_summary(books_negbin_sim)\n\npp_check(books_negbin_sim) + \n  xlim(0, 75) + \n  xlab(\"books\")\n\n# Numerical summaries\ntidy(books_negbin_sim, conf.int = TRUE, conf.level = 0.80)\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"12_notes.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":"../custom.scss","title":"12: Poisson & Negative Binomial Regression","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}