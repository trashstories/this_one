{"title":"17: (Normal) Hierarchical Models with Predictors","markdown":{"yaml":{"title":"17: (Normal) Hierarchical Models with Predictors","editor_options":{"chunk_output_type":"console"}},"headingText":"Load packages","containsRefs":false,"markdown":"\n\n```{r, warning=FALSE, message=FALSE}\n\nlibrary(bayesrules)\nlibrary(tidyverse)\nlibrary(rstanarm)\nlibrary(bayesplot)\nlibrary(tidybayes)\nlibrary(broom.mixed)\n\n# Load data\ndata(cherry_blossom_sample)\nrunning <- cherry_blossom_sample\n\n# Remove NAs\nrunning <- running %>% \n  select(runner, age, net) %>% \n  na.omit()\n\n```\n\n# 17.1 First steps: Complete pooling\n\n```{r}\n\ncomplete_pooled_model <- read_rds(\"complete_pooled_model.rds\")\n\n# Posterior summary statistics\nmodel_summary <- tidy(complete_pooled_model, \n                      conf.int = TRUE, conf.level = 0.80)\nmodel_summary\n\n# Posterior median model\nB0 <- model_summary$estimate[1]\nB1 <- model_summary$estimate[2]\nggplot(running, aes(x = age, y = net)) + \n  geom_point() + \n  geom_abline(aes(intercept = B0, slope = B1))\n\n```\n\n## 17.2.3 Tuning the prior\n\n```{r, cache=TRUE}\n\nrunning_model_1_prior <- stan_glmer(\n  net ~ age + (1 | runner), \n  data = running, family = gaussian,\n  prior_intercept = normal(100, 10),\n  prior = normal(2.5, 1), \n  prior_aux = exponential(1, autoscale = TRUE),\n  prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),\n  chains = 4, iter = 5000*2, seed = 84735, \n  prior_PD = TRUE)\n\nset.seed(84735)\nrunning %>% \n  add_fitted_draws(running_model_1_prior, n = 4) %>%\n  ggplot(aes(x = age, y = net)) +\n    geom_line(aes(y = .value, group = paste(runner, .draw))) + \n    facet_wrap(~ .draw)\n\nrunning %>%\n  add_predicted_draws(running_model_1_prior, n = 100) %>%\n  ggplot(aes(x = net)) +\n    geom_density(aes(x = .prediction, group = .draw)) +\n    xlim(-100,300)\n\n```\n\n## 17.2.4 Posterior simulation & analysis\n\n```{r, cache=TRUE}\n\nggplot(running, aes(x = age, y = net)) + \n  geom_point() + \n  facet_wrap(~ runner)\n\n# Simulate the posterior\nrunning_model_1 <- update(running_model_1_prior, prior_PD = FALSE)\n\n# Check the prior specifications\nprior_summary(running_model_1)\n\n# Markov chain diagnostics\nmcmc_trace(running_model_1)\nmcmc_dens_overlay(running_model_1)\nmcmc_acf(running_model_1)\nneff_ratio(running_model_1)\nrhat(running_model_1)\n\n```\n\n### 17.2.4.1 Posterior analysis of the global relationship\n\n```{r}\n\ntidy_summary_1 <- tidy(running_model_1, effects = \"fixed\",\n                       conf.int = TRUE, conf.level = 0.80)\ntidy_summary_1\n\nB0 <- tidy_summary_1$estimate[1]\nB1 <- tidy_summary_1$estimate[2]\nrunning %>%\n  add_fitted_draws(running_model_1, n = 200, re_formula = NA) %>%\n  ggplot(aes(x = age, y = net)) +\n    geom_line(aes(y = .value, group = .draw), alpha = 0.1) +\n    geom_abline(intercept = B0, slope = B1, color = \"blue\") +\n    lims(y = c(75, 110))\n\n```\n\n### 17.2.4.2 Posterior analysis of group-specific relationships\n\n```{r}\n\n# Posterior summaries of runner-specific intercepts\nrunner_summaries_1 <- running_model_1 %>%\n  spread_draws(`(Intercept)`, b[,runner]) %>% \n  mutate(runner_intercept = `(Intercept)` + b) %>% \n  select(-`(Intercept)`, -b) %>% \n  median_qi(.width = 0.80) %>% \n  select(runner, runner_intercept, .lower, .upper)\n\nrunner_summaries_1 %>% \n  filter(runner %in% c(\"runner:4\", \"runner:5\"))\n\n# 100 posterior plausible models for runners 4 & 5\nrunning %>%\n  filter(runner %in% c(\"4\", \"5\")) %>% \n  add_fitted_draws(running_model_1, n = 100) %>%\n  ggplot(aes(x = age, y = net)) +\n    geom_line(\n      aes(y = .value, group = paste(runner, .draw), color = runner),\n      alpha = 0.1) +\n    geom_point(aes(color = runner))\n\n# Plot runner-specific models with the global model\nggplot(running, aes(y = net, x = age, group = runner)) + \n  geom_abline(data = runner_summaries_1, color = \"gray\",\n              aes(intercept = runner_intercept, slope = B1)) + \n  geom_abline(intercept = B0, slope = B1, color = \"blue\") + \n  lims(x = c(50, 61), y = c(50, 135))\n\n```\n\n### 17.2.4.3 Posterior analysis of within- and between-group variability\n\n```{r}\n\ntidy_sigma <- tidy(running_model_1, effects = \"ran_pars\")\ntidy_sigma\n\nsigma_0 <- tidy_sigma[1,3]\nsigma_y <- tidy_sigma[2,3]\nsigma_0^2 / (sigma_0^2 + sigma_y^2)\n\nsigma_y^2 / (sigma_0^2 + sigma_y^2)\n\n```\n\n# 17.3 Hierarchical model with varying intercepts & slopes\n\n```{r}\n\n# Plot runner-specific models in the data\nrunning %>% \n  filter(runner %in% c(\"4\", \"5\", \"20\", \"29\")) %>% \n  ggplot(., aes(x = age, y = net)) + \n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE) + \n    facet_grid(~ runner)\n\nggplot(running, aes(x = age, y = net, group = runner)) + \n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n\n```\n\n## 17.3.3 Posterior simulation & analysis\n\n```{r}\n# \n# running_model_2 <- stan_glmer(\n#   net ~ age + (age | runner),\n#   data = running, family = gaussian,\n#   prior_intercept = normal(100, 10),\n#   prior = normal(2.5, 1), \n#   prior_aux = exponential(1, autoscale = TRUE),\n#   prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),\n#   chains = 4, iter = 5000*2, seed = 84735, adapt_delta = 0.99999\n# )\n# \n# saveRDS(running_model_2, \"running_model_2.rds\")\n\nrunning_model_2 <- readRDS(\"~/MPP/2023-06 Summer/Bayesian Statistics/bayes-rules-notebook/bayes-rules-notebook/running_model_2.rds\")\n\n# Confirm the prior model specifications\nprior_summary(running_model_2)\n\n```\n\n### 17.3.3.1 Posterior analysis of the global and group-specific parameters\n\n```{r}\n\n# Quick summary of global regression parameters\ntidy(running_model_2, effects = \"fixed\", conf.int = TRUE, conf.level = 0.80)\n\n# Get MCMC chains for the runner-specific intercepts & slopes\nrunner_chains_2 <- running_model_2 %>%\n  spread_draws(`(Intercept)`, b[term, runner], `age`) %>% \n  pivot_wider(names_from = term, names_glue = \"b_{term}\",\n              values_from = b) %>% \n  mutate(runner_intercept = `(Intercept)` + `b_(Intercept)`,\n         runner_age = age + b_age)\n\n# Posterior medians of runner-specific models\nrunner_summaries_2 <- runner_chains_2 %>% \n  group_by(runner) %>% \n  summarize(runner_intercept = median(runner_intercept),\n            runner_age = median(runner_age))\n\n# Check it out\nhead(runner_summaries_2, 3)\n\nggplot(running, aes(y = net, x = age, group = runner)) + \n  geom_abline(data = runner_summaries_2, color = \"gray\",\n              aes(intercept = runner_intercept, slope = runner_age)) + \n  lims(x = c(50, 61), y = c(50, 135))\n\n```\n\n### 17.3.3.2 Posterior analysis of within- and between-group variability\n\n```{r}\n\ntidy(running_model_2, effects = \"ran_pars\")\n\n```\n\n# 17.4 Model evaluation & selection\n\n```{r, cache=TRUE}\n\npp_check(complete_pooled_model) + \n  labs(x = \"net\", title = \"complete pooled model\")\npp_check(running_model_1) + \n  labs(x = \"net\", title = \"running model 1\")\npp_check(running_model_2) + \n  labs(x = \"net\", title = \"running model 2\")\n\n# Calculate prediction summaries\nset.seed(84735)\nprediction_summary(model = running_model_1, data = running)\n\nprediction_summary(model = running_model_2, data = running)\n\nprediction_summary_cv(model = running_model_1, data = running,\n                      k = 10, group = \"runner\")\n\n# Calculate ELPD for the 2 models\nelpd_hierarchical_1 <- loo(running_model_1)\nelpd_hierarchical_2 <- loo(running_model_2)\n\n# Compare the ELPD\nloo_compare(elpd_hierarchical_1, elpd_hierarchical_2)\n\n```\n\n# 17.5 Posterior prediction\n\n```{r}\n\n# Plot runner-specific# Plot runner-specific trends for runners 1 & 10\nrunning %>% \n  filter(runner %in% c(\"1\", \"10\")) %>% \n  ggplot(., aes(x = age, y = net)) + \n    geom_point() + \n    facet_grid(~ runner) + \n    lims(x = c(54, 61))\n\n# Simulate posterior predictive models for the 3 runners\nset.seed(84735)\npredict_next_race <- posterior_predict(\n  running_model_1, \n  newdata = data.frame(runner = c(\"1\", \"Miles\", \"10\"),\n                       age = c(61, 61, 61)))\n\nB0 + B1 * 61\n\n# Posterior predictive model plots\nmcmc_areas(predict_next_race, prob = 0.8) +\n ggplot2::scale_y_discrete(labels = c(\"runner 1\", \"Miles\", \"runner 10\"))\n\n```\n\n# 17.7 Example: Danceability\n\n```{r}\n\n# Import and wrangle the data\ndata(spotify)\nspotify <- spotify %>% \n  select(artist, title, danceability, valence, genre)\n\nggplot(spotify, aes(y = danceability, x = genre)) + \n  geom_boxplot()\nggplot(spotify, aes(y = danceability, x = valence)) + \n  geom_point()\nggplot(spotify, aes(y = danceability, x = valence, group = artist)) + \n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n\n```\n\n","srcMarkdownNoYaml":"\n\n```{r, warning=FALSE, message=FALSE}\n\n# Load packages\nlibrary(bayesrules)\nlibrary(tidyverse)\nlibrary(rstanarm)\nlibrary(bayesplot)\nlibrary(tidybayes)\nlibrary(broom.mixed)\n\n# Load data\ndata(cherry_blossom_sample)\nrunning <- cherry_blossom_sample\n\n# Remove NAs\nrunning <- running %>% \n  select(runner, age, net) %>% \n  na.omit()\n\n```\n\n# 17.1 First steps: Complete pooling\n\n```{r}\n\ncomplete_pooled_model <- read_rds(\"complete_pooled_model.rds\")\n\n# Posterior summary statistics\nmodel_summary <- tidy(complete_pooled_model, \n                      conf.int = TRUE, conf.level = 0.80)\nmodel_summary\n\n# Posterior median model\nB0 <- model_summary$estimate[1]\nB1 <- model_summary$estimate[2]\nggplot(running, aes(x = age, y = net)) + \n  geom_point() + \n  geom_abline(aes(intercept = B0, slope = B1))\n\n```\n\n## 17.2.3 Tuning the prior\n\n```{r, cache=TRUE}\n\nrunning_model_1_prior <- stan_glmer(\n  net ~ age + (1 | runner), \n  data = running, family = gaussian,\n  prior_intercept = normal(100, 10),\n  prior = normal(2.5, 1), \n  prior_aux = exponential(1, autoscale = TRUE),\n  prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),\n  chains = 4, iter = 5000*2, seed = 84735, \n  prior_PD = TRUE)\n\nset.seed(84735)\nrunning %>% \n  add_fitted_draws(running_model_1_prior, n = 4) %>%\n  ggplot(aes(x = age, y = net)) +\n    geom_line(aes(y = .value, group = paste(runner, .draw))) + \n    facet_wrap(~ .draw)\n\nrunning %>%\n  add_predicted_draws(running_model_1_prior, n = 100) %>%\n  ggplot(aes(x = net)) +\n    geom_density(aes(x = .prediction, group = .draw)) +\n    xlim(-100,300)\n\n```\n\n## 17.2.4 Posterior simulation & analysis\n\n```{r, cache=TRUE}\n\nggplot(running, aes(x = age, y = net)) + \n  geom_point() + \n  facet_wrap(~ runner)\n\n# Simulate the posterior\nrunning_model_1 <- update(running_model_1_prior, prior_PD = FALSE)\n\n# Check the prior specifications\nprior_summary(running_model_1)\n\n# Markov chain diagnostics\nmcmc_trace(running_model_1)\nmcmc_dens_overlay(running_model_1)\nmcmc_acf(running_model_1)\nneff_ratio(running_model_1)\nrhat(running_model_1)\n\n```\n\n### 17.2.4.1 Posterior analysis of the global relationship\n\n```{r}\n\ntidy_summary_1 <- tidy(running_model_1, effects = \"fixed\",\n                       conf.int = TRUE, conf.level = 0.80)\ntidy_summary_1\n\nB0 <- tidy_summary_1$estimate[1]\nB1 <- tidy_summary_1$estimate[2]\nrunning %>%\n  add_fitted_draws(running_model_1, n = 200, re_formula = NA) %>%\n  ggplot(aes(x = age, y = net)) +\n    geom_line(aes(y = .value, group = .draw), alpha = 0.1) +\n    geom_abline(intercept = B0, slope = B1, color = \"blue\") +\n    lims(y = c(75, 110))\n\n```\n\n### 17.2.4.2 Posterior analysis of group-specific relationships\n\n```{r}\n\n# Posterior summaries of runner-specific intercepts\nrunner_summaries_1 <- running_model_1 %>%\n  spread_draws(`(Intercept)`, b[,runner]) %>% \n  mutate(runner_intercept = `(Intercept)` + b) %>% \n  select(-`(Intercept)`, -b) %>% \n  median_qi(.width = 0.80) %>% \n  select(runner, runner_intercept, .lower, .upper)\n\nrunner_summaries_1 %>% \n  filter(runner %in% c(\"runner:4\", \"runner:5\"))\n\n# 100 posterior plausible models for runners 4 & 5\nrunning %>%\n  filter(runner %in% c(\"4\", \"5\")) %>% \n  add_fitted_draws(running_model_1, n = 100) %>%\n  ggplot(aes(x = age, y = net)) +\n    geom_line(\n      aes(y = .value, group = paste(runner, .draw), color = runner),\n      alpha = 0.1) +\n    geom_point(aes(color = runner))\n\n# Plot runner-specific models with the global model\nggplot(running, aes(y = net, x = age, group = runner)) + \n  geom_abline(data = runner_summaries_1, color = \"gray\",\n              aes(intercept = runner_intercept, slope = B1)) + \n  geom_abline(intercept = B0, slope = B1, color = \"blue\") + \n  lims(x = c(50, 61), y = c(50, 135))\n\n```\n\n### 17.2.4.3 Posterior analysis of within- and between-group variability\n\n```{r}\n\ntidy_sigma <- tidy(running_model_1, effects = \"ran_pars\")\ntidy_sigma\n\nsigma_0 <- tidy_sigma[1,3]\nsigma_y <- tidy_sigma[2,3]\nsigma_0^2 / (sigma_0^2 + sigma_y^2)\n\nsigma_y^2 / (sigma_0^2 + sigma_y^2)\n\n```\n\n# 17.3 Hierarchical model with varying intercepts & slopes\n\n```{r}\n\n# Plot runner-specific models in the data\nrunning %>% \n  filter(runner %in% c(\"4\", \"5\", \"20\", \"29\")) %>% \n  ggplot(., aes(x = age, y = net)) + \n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE) + \n    facet_grid(~ runner)\n\nggplot(running, aes(x = age, y = net, group = runner)) + \n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n\n```\n\n## 17.3.3 Posterior simulation & analysis\n\n```{r}\n# \n# running_model_2 <- stan_glmer(\n#   net ~ age + (age | runner),\n#   data = running, family = gaussian,\n#   prior_intercept = normal(100, 10),\n#   prior = normal(2.5, 1), \n#   prior_aux = exponential(1, autoscale = TRUE),\n#   prior_covariance = decov(reg = 1, conc = 1, shape = 1, scale = 1),\n#   chains = 4, iter = 5000*2, seed = 84735, adapt_delta = 0.99999\n# )\n# \n# saveRDS(running_model_2, \"running_model_2.rds\")\n\nrunning_model_2 <- readRDS(\"~/MPP/2023-06 Summer/Bayesian Statistics/bayes-rules-notebook/bayes-rules-notebook/running_model_2.rds\")\n\n# Confirm the prior model specifications\nprior_summary(running_model_2)\n\n```\n\n### 17.3.3.1 Posterior analysis of the global and group-specific parameters\n\n```{r}\n\n# Quick summary of global regression parameters\ntidy(running_model_2, effects = \"fixed\", conf.int = TRUE, conf.level = 0.80)\n\n# Get MCMC chains for the runner-specific intercepts & slopes\nrunner_chains_2 <- running_model_2 %>%\n  spread_draws(`(Intercept)`, b[term, runner], `age`) %>% \n  pivot_wider(names_from = term, names_glue = \"b_{term}\",\n              values_from = b) %>% \n  mutate(runner_intercept = `(Intercept)` + `b_(Intercept)`,\n         runner_age = age + b_age)\n\n# Posterior medians of runner-specific models\nrunner_summaries_2 <- runner_chains_2 %>% \n  group_by(runner) %>% \n  summarize(runner_intercept = median(runner_intercept),\n            runner_age = median(runner_age))\n\n# Check it out\nhead(runner_summaries_2, 3)\n\nggplot(running, aes(y = net, x = age, group = runner)) + \n  geom_abline(data = runner_summaries_2, color = \"gray\",\n              aes(intercept = runner_intercept, slope = runner_age)) + \n  lims(x = c(50, 61), y = c(50, 135))\n\n```\n\n### 17.3.3.2 Posterior analysis of within- and between-group variability\n\n```{r}\n\ntidy(running_model_2, effects = \"ran_pars\")\n\n```\n\n# 17.4 Model evaluation & selection\n\n```{r, cache=TRUE}\n\npp_check(complete_pooled_model) + \n  labs(x = \"net\", title = \"complete pooled model\")\npp_check(running_model_1) + \n  labs(x = \"net\", title = \"running model 1\")\npp_check(running_model_2) + \n  labs(x = \"net\", title = \"running model 2\")\n\n# Calculate prediction summaries\nset.seed(84735)\nprediction_summary(model = running_model_1, data = running)\n\nprediction_summary(model = running_model_2, data = running)\n\nprediction_summary_cv(model = running_model_1, data = running,\n                      k = 10, group = \"runner\")\n\n# Calculate ELPD for the 2 models\nelpd_hierarchical_1 <- loo(running_model_1)\nelpd_hierarchical_2 <- loo(running_model_2)\n\n# Compare the ELPD\nloo_compare(elpd_hierarchical_1, elpd_hierarchical_2)\n\n```\n\n# 17.5 Posterior prediction\n\n```{r}\n\n# Plot runner-specific# Plot runner-specific trends for runners 1 & 10\nrunning %>% \n  filter(runner %in% c(\"1\", \"10\")) %>% \n  ggplot(., aes(x = age, y = net)) + \n    geom_point() + \n    facet_grid(~ runner) + \n    lims(x = c(54, 61))\n\n# Simulate posterior predictive models for the 3 runners\nset.seed(84735)\npredict_next_race <- posterior_predict(\n  running_model_1, \n  newdata = data.frame(runner = c(\"1\", \"Miles\", \"10\"),\n                       age = c(61, 61, 61)))\n\nB0 + B1 * 61\n\n# Posterior predictive model plots\nmcmc_areas(predict_next_race, prob = 0.8) +\n ggplot2::scale_y_discrete(labels = c(\"runner 1\", \"Miles\", \"runner 10\"))\n\n```\n\n# 17.7 Example: Danceability\n\n```{r}\n\n# Import and wrangle the data\ndata(spotify)\nspotify <- spotify %>% \n  select(artist, title, danceability, valence, genre)\n\nggplot(spotify, aes(y = danceability, x = genre)) + \n  geom_boxplot()\nggplot(spotify, aes(y = danceability, x = valence)) + \n  geom_point()\nggplot(spotify, aes(y = danceability, x = valence, group = artist)) + \n  geom_smooth(method = \"lm\", se = FALSE, size = 0.5)\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"17_notes.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":"../custom.scss","title":"17: (Normal) Hierarchical Models with Predictors","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}