{"title":"13: Logistic Regression","markdown":{"yaml":{"title":"13: Logistic Regression","editor_options":{"chunk_output_type":"console"}},"headingText":"Load packages","containsRefs":false,"markdown":"\n\n```{r, warning=FALSE, message=FALSE}\n\nlibrary(bayesrules)\nlibrary(rstanarm)\nlibrary(bayesplot)\nlibrary(tidyverse)\nlibrary(tidybayes)\nlibrary(broom.mixed)\nlibrary(janitor)\n\n# Load and process the data\ndata(weather_perth)\nweather <- weather_perth %>% \n  select(day_of_year, raintomorrow, humidity9am, humidity3pm, raintoday)\n\n# Run a prior simulation\nrain_model_prior <- stan_glm(raintomorrow ~ humidity9am,\n                             data = weather, family = binomial,\n                             prior_intercept = normal(-1.4, 0.7),\n                             prior = normal(0.07, 0.035),\n                             chains = 4, iter = 5000*2, seed = 84735,\n                             prior_PD = TRUE)\n\n```\n\n```{r}\n\nset.seed(84735)\n\n# Plot 100 prior models with humidity\nweather %>% \n  add_fitted_draws(rain_model_prior, n = 100) %>% \n  ggplot(aes(x = humidity9am, y = raintomorrow)) +\n    geom_line(aes(y = .value, group = .draw), size = 0.1)\n\n# Plot the observed proportion of rain in 100 prior datasets\nweather %>% \n  add_predicted_draws(rain_model_prior, n = 100) %>% \n  group_by(.draw) %>% \n  summarize(proportion_rain = mean(.prediction == 1)) %>% \n  ggplot(aes(x = proportion_rain)) +\n    geom_histogram(color = \"white\")\n\n```\n\n```{r}\n\nggplot(weather, aes(x = humidity9am, y = raintomorrow)) + \n  geom_jitter(size = 0.2)\n\n# Calculate & plot the rain rate by humidity bracket\nweather %>% \n  mutate(humidity_bracket = \n           cut(humidity9am, breaks = seq(10, 100, by = 10))) %>% \n  group_by(humidity_bracket) %>% \n  summarize(rain_rate = mean(raintomorrow == \"Yes\")) %>% \n  ggplot(aes(x = humidity_bracket, y = rain_rate)) + \n    geom_point() + \n    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))\n\n# Simulate the model\nrain_model_1 <- update(rain_model_prior, prior_PD = FALSE)\n\n# MCMC trace, density, & autocorrelation plots\nmcmc_trace(rain_model_1)\nmcmc_dens_overlay(rain_model_1)\nmcmc_acf(rain_model_1)\n\nweather %>%\n  add_fitted_draws(rain_model_1, n = 100) %>%\n  ggplot(aes(x = humidity9am, y = raintomorrow)) +\n    geom_line(aes(y = .value, group = .draw), alpha = 0.15) + \n    labs(y = \"probability of rain\")\n\n```\n\n```{r}\n\n# Posterior summaries on the log(odds) scale\nposterior_interval(rain_model_1, prob = 0.80)\n\n# Posterior summaries on the odds scale\nexp(posterior_interval(rain_model_1, prob = 0.80))\n\n# Posterior predictions of binary outcome\nset.seed(84735)\nbinary_prediction <- posterior_predict(\n  rain_model_1, newdata = data.frame(humidity9am = 99))\n\n# Posterior predictions of binary outcome - from scratch\nset.seed(84735)\nrain_model_1_df <- as.data.frame(rain_model_1) %>% \n  mutate(log_odds = `(Intercept)` + humidity9am*99,\n         odds = exp(log_odds),\n         prob = odds / (1 + odds),\n         Y = rbinom(20000, size = 1, prob = prob))\n\n\n# Check it out\nhead(rain_model_1_df, 2)\n\nmcmc_hist(binary_prediction) + \n  labs(x = \"Y\")\nggplot(rain_model_1_df, aes(x = Y)) + \n  stat_count()\n\n# Summarize the posterior predictions of Y\ntable(binary_prediction)\nbinary_prediction\n\ncolMeans(binary_prediction)\n\n```\n\n```{r}\n\nproportion_rain <- function(x){mean(x == 1)}\npp_check(rain_model_1, nreps = 100,\n         plotfun = \"stat\", stat = \"proportion_rain\") + \n  xlab(\"probability of rain\")\n\n# Posterior predictive models for each day in dataset\nset.seed(84735)\nrain_pred_1 <- posterior_predict(rain_model_1, newdata = weather)\ndim(rain_pred_1)\n\nweather_classifications <- weather %>% \n  mutate(rain_prob = colMeans(rain_pred_1),\n         rain_class_1 = as.numeric(rain_prob >= 0.5)) %>% \n  select(humidity9am, rain_prob, rain_class_1, raintomorrow)\n\nhead(weather_classifications, 3)\n\n# Confusion matrix\nweather_classifications %>% \n  tabyl(raintomorrow, rain_class_1) %>% \n  adorn_totals(c(\"row\", \"col\"))\n\nset.seed(84735)\nclassification_summary(model = rain_model_1, data = weather, cutoff = 0.5)\n\nset.seed(84735)\nclassification_summary(model = rain_model_1, data = weather, cutoff = 0.2)\n\nset.seed(84735)\ncv_accuracy_1 <- classification_summary_cv(\n  model = rain_model_1, data = weather, cutoff = 0.2, k = 10)\n\n```\n\n```{r}\n\nrain_model_2 <- stan_glm(\n  raintomorrow ~ humidity9am + humidity3pm + raintoday, \n  data = weather, family = binomial,\n  prior_intercept = normal(-1.4, 0.7),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  chains = 4, iter = 5000*2, seed = 84735)\n\n# Obtain prior model specifications\nprior_summary(rain_model_2)\n\n# Numerical summaries\ntidy(rain_model_2, effects = \"fixed\", conf.int = TRUE, conf.level = 0.80)\n\nset.seed(84735)\ncv_accuracy_2 <- classification_summary_cv(\n  model = rain_model_2, data = weather, cutoff = 0.2, k = 10)\n\n# CV for the models\ncv_accuracy_1$cv\ncv_accuracy_2$cv\n\n# Calculate ELPD for the models\nloo_1 <- loo(rain_model_1)\nloo_2 <- loo(rain_model_2)\n\n# Compare the ELPD for the 2 models\nloo_compare(loo_1, loo_2)\n\n```\n\n","srcMarkdownNoYaml":"\n\n```{r, warning=FALSE, message=FALSE}\n\n# Load packages\nlibrary(bayesrules)\nlibrary(rstanarm)\nlibrary(bayesplot)\nlibrary(tidyverse)\nlibrary(tidybayes)\nlibrary(broom.mixed)\nlibrary(janitor)\n\n# Load and process the data\ndata(weather_perth)\nweather <- weather_perth %>% \n  select(day_of_year, raintomorrow, humidity9am, humidity3pm, raintoday)\n\n# Run a prior simulation\nrain_model_prior <- stan_glm(raintomorrow ~ humidity9am,\n                             data = weather, family = binomial,\n                             prior_intercept = normal(-1.4, 0.7),\n                             prior = normal(0.07, 0.035),\n                             chains = 4, iter = 5000*2, seed = 84735,\n                             prior_PD = TRUE)\n\n```\n\n```{r}\n\nset.seed(84735)\n\n# Plot 100 prior models with humidity\nweather %>% \n  add_fitted_draws(rain_model_prior, n = 100) %>% \n  ggplot(aes(x = humidity9am, y = raintomorrow)) +\n    geom_line(aes(y = .value, group = .draw), size = 0.1)\n\n# Plot the observed proportion of rain in 100 prior datasets\nweather %>% \n  add_predicted_draws(rain_model_prior, n = 100) %>% \n  group_by(.draw) %>% \n  summarize(proportion_rain = mean(.prediction == 1)) %>% \n  ggplot(aes(x = proportion_rain)) +\n    geom_histogram(color = \"white\")\n\n```\n\n```{r}\n\nggplot(weather, aes(x = humidity9am, y = raintomorrow)) + \n  geom_jitter(size = 0.2)\n\n# Calculate & plot the rain rate by humidity bracket\nweather %>% \n  mutate(humidity_bracket = \n           cut(humidity9am, breaks = seq(10, 100, by = 10))) %>% \n  group_by(humidity_bracket) %>% \n  summarize(rain_rate = mean(raintomorrow == \"Yes\")) %>% \n  ggplot(aes(x = humidity_bracket, y = rain_rate)) + \n    geom_point() + \n    theme(axis.text.x = element_text(angle = 45, vjust = 0.5))\n\n# Simulate the model\nrain_model_1 <- update(rain_model_prior, prior_PD = FALSE)\n\n# MCMC trace, density, & autocorrelation plots\nmcmc_trace(rain_model_1)\nmcmc_dens_overlay(rain_model_1)\nmcmc_acf(rain_model_1)\n\nweather %>%\n  add_fitted_draws(rain_model_1, n = 100) %>%\n  ggplot(aes(x = humidity9am, y = raintomorrow)) +\n    geom_line(aes(y = .value, group = .draw), alpha = 0.15) + \n    labs(y = \"probability of rain\")\n\n```\n\n```{r}\n\n# Posterior summaries on the log(odds) scale\nposterior_interval(rain_model_1, prob = 0.80)\n\n# Posterior summaries on the odds scale\nexp(posterior_interval(rain_model_1, prob = 0.80))\n\n# Posterior predictions of binary outcome\nset.seed(84735)\nbinary_prediction <- posterior_predict(\n  rain_model_1, newdata = data.frame(humidity9am = 99))\n\n# Posterior predictions of binary outcome - from scratch\nset.seed(84735)\nrain_model_1_df <- as.data.frame(rain_model_1) %>% \n  mutate(log_odds = `(Intercept)` + humidity9am*99,\n         odds = exp(log_odds),\n         prob = odds / (1 + odds),\n         Y = rbinom(20000, size = 1, prob = prob))\n\n\n# Check it out\nhead(rain_model_1_df, 2)\n\nmcmc_hist(binary_prediction) + \n  labs(x = \"Y\")\nggplot(rain_model_1_df, aes(x = Y)) + \n  stat_count()\n\n# Summarize the posterior predictions of Y\ntable(binary_prediction)\nbinary_prediction\n\ncolMeans(binary_prediction)\n\n```\n\n```{r}\n\nproportion_rain <- function(x){mean(x == 1)}\npp_check(rain_model_1, nreps = 100,\n         plotfun = \"stat\", stat = \"proportion_rain\") + \n  xlab(\"probability of rain\")\n\n# Posterior predictive models for each day in dataset\nset.seed(84735)\nrain_pred_1 <- posterior_predict(rain_model_1, newdata = weather)\ndim(rain_pred_1)\n\nweather_classifications <- weather %>% \n  mutate(rain_prob = colMeans(rain_pred_1),\n         rain_class_1 = as.numeric(rain_prob >= 0.5)) %>% \n  select(humidity9am, rain_prob, rain_class_1, raintomorrow)\n\nhead(weather_classifications, 3)\n\n# Confusion matrix\nweather_classifications %>% \n  tabyl(raintomorrow, rain_class_1) %>% \n  adorn_totals(c(\"row\", \"col\"))\n\nset.seed(84735)\nclassification_summary(model = rain_model_1, data = weather, cutoff = 0.5)\n\nset.seed(84735)\nclassification_summary(model = rain_model_1, data = weather, cutoff = 0.2)\n\nset.seed(84735)\ncv_accuracy_1 <- classification_summary_cv(\n  model = rain_model_1, data = weather, cutoff = 0.2, k = 10)\n\n```\n\n```{r}\n\nrain_model_2 <- stan_glm(\n  raintomorrow ~ humidity9am + humidity3pm + raintoday, \n  data = weather, family = binomial,\n  prior_intercept = normal(-1.4, 0.7),\n  prior = normal(0, 2.5, autoscale = TRUE), \n  chains = 4, iter = 5000*2, seed = 84735)\n\n# Obtain prior model specifications\nprior_summary(rain_model_2)\n\n# Numerical summaries\ntidy(rain_model_2, effects = \"fixed\", conf.int = TRUE, conf.level = 0.80)\n\nset.seed(84735)\ncv_accuracy_2 <- classification_summary_cv(\n  model = rain_model_2, data = weather, cutoff = 0.2, k = 10)\n\n# CV for the models\ncv_accuracy_1$cv\ncv_accuracy_2$cv\n\n# Calculate ELPD for the models\nloo_1 <- loo(rain_model_1)\nloo_2 <- loo(rain_model_2)\n\n# Compare the ELPD for the 2 models\nloo_compare(loo_1, loo_2)\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"13_notes.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":"../custom.scss","title":"13: Logistic Regression","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}